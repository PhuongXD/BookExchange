<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AAAASUVORK5CYII=
</value>
  </data>
</root>